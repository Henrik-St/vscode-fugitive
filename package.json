{
	"name": "vscode-fugitive",
	"displayName": "Fugitive for VS Code",
	"description": "This is simple extension that adds a subset of the fugitive plugin to VS Code",
	"version": "0.0.8",
	"publisher": "hnrk-str",
	"private": true,
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/Henrik-St/vscode-fugitive.git"
	},
	"bugs": {
		"url": "https://github.com/Henrik-St/vscode-fugitive/issues"
	},
	"engines": {
		"vscode": "^1.74.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [],
	"extensionDependencies": [
		"vscode.git"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "fugitive.open",
				"title": "Fugitive"
			},
			{
				"command": "fugitive.stage",
				"title": "Fugitive stage",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.unstage",
				"title": "Fugitive unstage",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.unstageAll",
				"title": "Fugitive unstage all",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.clean",
				"title": "Fugitive: clean",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.commit",
				"title": "Fugitive: commit",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.openDiff",
				"title": "Fugitive: open diff",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.help",
				"title": "Fugitive: open help",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.goUnstaged",
				"title": "Fugitive: go to unstaged section",
				"when": "resourceScheme == fugitive"
			},
			{
				"command": "fugitive.goStaged",
				"title": "Fugitive: go to staged section",
				"when": "resourceScheme == fugitive"
			}
		],
		"keybindings": [
			{
				"command": "fugitive.stage",
				"key": "s",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.unstage",
				"key": "u",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.unstageAll",
				"key": "shift+u",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.clean",
				"key": "shift+x",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.openDiff",
				"key": "d v",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.commit",
				"key": "c c",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.amend",
				"key": "c a",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.amendNoEdit",
				"key": "c e",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.stash",
				"key": "c z z",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.stashStaged",
				"key": "c z s",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.popLatestStash",
				"key": "c z shift+p",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.popStash",
				"key": "c z p",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.goUnstaged",
				"key": "g u",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.goStaged",
				"key": "g s",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.goUnpushed",
				"key": "g p",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.openFile",
				"key": "shift+o",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.openFileSplit",
				"key": "o",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			},
			{
				"command": "fugitive.help",
				"key": "g shift+oem_4",
				"when": "(vim.mode == 'Normal' || !vim.mode) && resourceScheme == fugitive && editorTextFocus"
			}
		],
		"languages": [
			{
				"id": "fugitive",
				"filenames": [
					"fugitive"
				],
				"icon": {
					"light": "resources/icons/git.png",
					"dark": "resources/icons/git.png"
				}
			}
		],
		"grammars": [
			{
				"language": "fugitive",
				"scopeName": "source.fugitive",
				"path": "./syntaxes/fugitive.tmGrammar.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint \"src/**/*.ts\"",
		"watch": "tsc -watch -p ./"
	},
	"dependencies": {},
	"devDependencies": {
		"@types/node": "^18",
		"@types/vscode": "^1.73.0",
		"@typescript-eslint/eslint-plugin": "^6.7.0",
		"@typescript-eslint/parser": "^6.7.0",
		"eslint": "^8.26.0",
		"typescript": "^5.4.2"
	}
}